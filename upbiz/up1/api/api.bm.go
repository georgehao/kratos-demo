// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api/api.proto

package api

import (
	"context"

	bm "github.com/go-kratos/kratos/pkg/net/http/blademaster"
	"github.com/go-kratos/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathUpPing = "/up.service.v1.Up/Ping"
var PathUpCheckRole = "/up.service.v1.Up/CheckRole"

// UpBMServer is the server API for Up service.
type UpBMServer interface {
	Ping(ctx context.Context, req *google_protobuf.Empty) (resp *google_protobuf.Empty, err error)

	CheckRole(ctx context.Context, req *CheckUpReq) (resp *CheckUpResp, err error)
}

var UpSvc UpBMServer

func upPing(c *bm.Context) {
	p := new(google_protobuf.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := UpSvc.Ping(c, p)
	c.JSON(resp, err)
}

func upCheckRole(c *bm.Context) {
	p := new(CheckUpReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := UpSvc.CheckRole(c, p)
	c.JSON(resp, err)
}

// RegisterUpBMServer Register the blademaster route
func RegisterUpBMServer(e *bm.Engine, server UpBMServer) {
	UpSvc = server
	e.GET("/up.service.v1.Up/Ping", upPing)
	e.GET("/up.service.v1.Up/CheckRole", upCheckRole)
}
